{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Developer Guide: API Automation and Utility References","text":"<p>This documentation serves as a comprehensive guide for developers working on API automation. It provides clear instructions on:</p> <ul> <li>How to write custom test cases for API automation using our framework.</li> <li>How to effectively utilize the existing utilities available in our repository.</li> </ul> <p>We aim to ensure consistency, reduce code duplication, and help both new and experienced developers work efficiently by centralizing key information in one place.</p> <p>\ud83d\udccc What You\u2019ll Find Here</p> <ul> <li>Setup Instructions: Links to existing setup documentation for running the automation framework locally.</li> <li>Custom Case Development: Step-by-step guide for creating custom cases in our automation layer.</li> <li>Best Practices &amp; FAQs: Common developer questions and recommended approaches.</li> <li>Search &amp; Show Utilities: Reference to existing utility functions already available in the repository, including search and display helpers.</li> </ul> <p>\ud83d\udcce Useful Documents</p> <p>Below are some important guides you may want to review before starting:</p> <ul> <li>Local Setup Guide</li> <li>Creating Custom Cases</li> </ul> <p>If you have any questions or suggestions, feel free to reach out to the automation team.</p>"},{"location":"cases/custom-case-guide/","title":"Writing a Case using Java","text":"<p>This guide explains how to write and execute API Automation Cases using Java. It covers what a Case is, how Cases are executed, and how to use builder-pattern classes like <code>URLWrap.java</code> to construct them. For more detail, refer to the custom case documentation.</p>"},{"location":"cases/custom-case-guide/#what-is-a-case","title":"\ud83d\udccc What is a Case?","text":"<p>In the context of API Automation, a Case refers to a structured unit of test logic designed to validate a specific functionality of an API automatically.</p> <p>Each Case typically targets a specific resource and operation (e.g., GET, POST, PUT), ensuring expected API behavior through dynamic request construction and response validation.</p>"},{"location":"cases/custom-case-guide/#how-are-cases-executed","title":"\u2699\ufe0f How Are Cases Executed?","text":"<ul> <li>Each Case is constructed for a specific resource and operation.</li> <li>All defined Cases are collected into a list.</li> <li>The test runner executes each Case in the list sequentially or as per the test plan.</li> </ul>"},{"location":"cases/custom-case-guide/#how-to-write-a-case","title":"\ud83e\uddf1 How to Write a Case","text":"<p>Cases should be written in a Java method named <code>build</code> with the following signature:</p> <pre><code> public List&lt;Case&gt; build(Url url, URLBuilder urlBuilder, Key key)\n</code></pre> <p>This method should return a list of Case objects, each built using helper classes that follow the Builder Pattern.</p>"},{"location":"cases/custom-case-guide/#key-class-urlwrapjava","title":"\ud83d\udd28 Key Class: URLWrap.java","text":"<p>The URLWrap class is used to construct and modify API request URLs, headers, and body content dynamically.</p> <pre><code>    new URLWrap(URLBuilder urlBuilder)\n</code></pre> <p>Initializes a new URLWrap object using a URLBuilder instance.</p> Method Description Return Type param(String name, String value) Adds a query parameter to the URL. URLWrap setHeader(String name, String value) Adds a header to the request. URLWrap setBody(JSONObject jsonObject) Sets the request body using a <code>JSONObject</code>. URLWrap setBody(LinkedHashMap) Sets the request body using a <code>LinkedHashMap</code>. URLWrap updatePath(String pathKey, String value) Replaces placeholders in the path with actual values. URLWrap setContent(ContentType type) Sets the content type (e.g., <code>application/json</code>, <code>form-data</code>). URLWrap"},{"location":"faq/troubleshooting/","title":"API Automation \u2013 Custom Cases FAQ","text":"<p>This document provides clear guidance on:</p> <ul> <li>\u2705 When to write Spec Cases</li> <li>\u2705 When to write Custom Cases</li> <li>\u2705 How and where to write them</li> </ul>"},{"location":"faq/troubleshooting/#q1-what-is-the-zest-framework","title":"Q1: What is the ZEST Framework?","text":"<p>ZEST is our in-house automation framework that acts as an intelligent validation layer for your API development.</p> <pre><code>\ud83d\udd0d Why Do You Need ZEST?\n\n    Once you develop an API, the following validations are essential:\n\n        - Are mandatory fields being validated correctly?\n        - Are invalid inputs being rejected?\n        - Is the response structure accurate?\n</code></pre> <p>ZEST helps you answer all these questions \u2014 automatically.</p> <p>\u2705 What ZEST Does for You</p> <p>ZEST automatically performs the following checks:</p> <ul> <li>Verifies presence and enforcement of mandatory fields</li> <li>Validates null, empty, or incorrect values</li> <li>Ensures unique fields are properly handled</li> <li>Confirms range validations</li> <li>Checks request and response structures</li> <li>Supports standard CRUD operations (Create, Read, Update, Delete)</li> </ul> <p>\ud83d\udca1 Think of ZEST As...</p> <p>A reliable auto-tester that reads your spec file and validates your API implementation without requiring you to write basic validation logic.</p> <p>Read More: ZEST Specification Tool</p>"},{"location":"faq/troubleshooting/#q2-what-are-spec-cases","title":"Q2: What are Spec Cases?","text":"<p>\u2705 description:      If the functionality is defined in the API specification, it is considered a Spec Case.     These cases are automatically handled by the ZEST framework.</p> <p>Zest Handles:</p> <ul> <li>Request parameter validations</li> <li>Error response structure validation</li> <li>Enum field validations</li> <li>Data type validations</li> <li>Basic CRUD validations (Create, Read, Update, Delete)</li> </ul>"},{"location":"faq/troubleshooting/#q3-what-is-a-custom-case","title":"Q3: What is a Custom Case?","text":"<p>A Custom Case is used to test specific business logic that is not covered by the API specification or the ZEST framework.</p> <p>These cases are useful when the test involves more than basic field-level validations and requires checking complex workflows, multiple steps, or feature dependencies.</p> <p>Examples : </p> <p>A field cannot be deleted if it is already used in:</p> <ul> <li>Workflow</li> <li>Blueprint</li> <li>CommandCenter</li> </ul> <p>Business Hours configuration:</p> <ul> <li>Correctly handles holidays and working days</li> </ul> <p>Email notifications:</p> <ul> <li>Must work correctly in Sandbox mode</li> </ul> <p>\u2705 Guideline</p> <p>If your test includes multiple steps, depends on specific configurations, or represents a real business process \u2014 it should be written as a Custom Case.</p> <p>Custom Cases give you more control to test scenarios that are specific to how a feature works in real use cases. These tests cannot be fully automated through ZEST alone.</p>"},{"location":"faq/troubleshooting/#q4-how-to-write-custom-cases-is-there-a-format","title":"Q4: How to Write Custom Cases? Is There a Format?","text":"<p>Yes \u2014 writing a Custom Case follows a simple and consistent format.</p> <p>\ud83d\udcdd Steps to Follow</p> <p>\u2705 Step 1: Read the Guide  - Before you start, refer to this guide: Writing Custom Cases \u2013 Documentation Link</p> <p>\u2705 Step 2: Think of the Test Flow as a Simple Program - Break your test case into three logical parts: PreHook, Case, and PostHook.</p> <p>Example Use Case</p> <p>You are testing whether the Field Association API reflects the correct configuration after a workflow is created.</p> <p>Explanation of the Flow :</p> <p>PreHook </p> <ul> <li>Create the workflow and associate the field.</li> <li>This step sets up the environment before the main test runs.</li> </ul> <p>Case </p> <ul> <li>Execute the main API call (which may internally trigger the Field Association API).</li> </ul> <p>PostHook </p> <ul> <li>Verify the response from the Field Association API:</li> <li>Is the workflow configuration included?</li> <li>Are the correct response keys returned?</li> <li>Based on the verification, mark the test case as pass or fail.</li> </ul> <p>This structure helps make your Custom Case clear, maintainable, and aligned with business logic.</p>"},{"location":"faq/troubleshooting/#q5-at-what-stage-should-i-write-custom-cases","title":"Q5: At What Stage Should I Write Custom Cases?","text":"<p>Custom Cases are typically written after Spec Cases are completed using the ZEST framework.</p> <p>Overview :</p> <ol> <li>The Automation Developer first implements all applicable Spec Cases using ZEST.</li> <li>After the feature demo, the API Developer and Automation Developer collaborate to identify and finalize the required Custom Cases.</li> <li>Once Custom Cases are confirmed, development can proceed accordingly.</li> </ol> <p>\u2705 Quick Guideline</p> <ul> <li>Spec Cases \u2192 Handled by the Automation Team using ZEST.</li> <li>Custom Cases \u2192 Should be written by the API Developer, since you understand the business logic and feature-specific behavior best.</li> </ul> <p>This approach ensures proper test coverage for both standard validations and complex business scenarios.</p>"},{"location":"faq/troubleshooting/#q6-what-if-i-api-developer-already-know-which-cases-need-to-be-covered","title":"Q6: What If I (API Developer) Already Know Which Cases Need to Be Covered?","text":"<p>That\u2019s perfect \u2014 as the API Developer, you are in the best position to identify relevant test scenarios.</p> <p>During the Demo</p> <ul> <li>Share your understanding of the feature with the Automation Developer.</li> <li>Work together to finalize the list of Custom Cases.</li> </ul> <p>If you\u2019re uncertain, you can request a Dummy Code Coverage Report from the Automation Team.</p> <p>\u2705 What the Dummy Report Helps You Understand</p> <ul> <li>Which Spec Cases are already covered by ZEST.</li> <li>Which Custom Cases are still missing.</li> <li>How to avoid duplicate test cases.</li> </ul> <p>\u2705 When This Is Especially Helpful</p> <ul> <li>The feature changes a property or value used in multiple locations.</li> <li>The feature was developed by multiple developers.</li> <li>The feature has complex workflows with conditional behaviors.</li> </ul> <p>By reviewing the dummy report, you can make sure all required test cases are properly identified and covered \u2014 without overlap.</p>"},{"location":"faq/troubleshooting/#q7-where-do-i-write-and-commit-custom-cases","title":"Q7: Where Do I Write and Commit Custom Cases?","text":"<p>The Automation Developer will provide you with a dedicated feature branch where all relevant Spec Cases are already committed.</p> <p>You should add your Custom Cases on top of this branch.</p> <p>\ud83d\udd10 Branch Access</p> <ul> <li>If you do not have access to the branch, please contact the Automation Developer for permissions.</li> </ul>"},{"location":"setup/local-setup/","title":"Local Setup Guide","text":"<p>This guide explains how developers can set up and run the API automation framework locally to create and validate custom test cases effectively.For detailed steps, refer to the Setup Guide.</p> <p>\ud83d\udd01 Flow Overview</p> <p>The setup process is divided into three simple steps:</p> <ol> <li>Project Creation</li> <li>Configure Properties</li> <li>Running the Automation</li> </ol> <p>\ud83c\udfd7\ufe0f 1. Project Creation</p> <p>This is a one-time setup process. If you already have the <code>crm-spec-automation</code> repository locally, you can skip this step.</p>"},{"location":"setup/local-setup/#steps","title":"Steps:","text":"<ul> <li>Once the API Automation developer completes the required specification file changes, the corresponding feature branch will be available in the <code>crm-spec-automation</code> repository.</li> <li>If you do not have access to the repository, please contact the API Automation developer to grant permission.</li> <li> <p>Clone the repository to any directory on your local machine:</p> <pre><code>command : git clone https://git.csez.zohocorpin.com/CRM/rest-api-life-cycle/automation/crm-spec-automation\n</code></pre> </li> <li> <p>Navigate into the project and switch to the appropriate feature branch.</p> </li> <li>Open the project in your preferred IDE.</li> </ul> <p>For detailed steps, refer to the .</p> <p>\u2699\ufe0f 2. Configure Properties</p> <p>To run test cases, update the required fields in the config.properties file.</p>"},{"location":"setup/local-setup/#mandatory-configurations","title":"Mandatory Configurations","text":"Property Description Local Zoho Value IDC Value account-domain Domain to get the access token https://accounts.localzoho.com https://accounts.zoho.com domain Instance URL to make API calls https://{crmdomain}.localzoho.com https://www.zohoapis.com/crm version API version to be tested (semantic versioning) 2.0 2.0 zest-zgid ZEST account ID for authentication \u2014 \u2014 zest-ticket ZEST ticket for authentication \u2014 \u2014 open-report-in-browser Automatically open test report in browser true true <p>Note: If you do not have a ZEST account, please contact the API Automation team to request access.</p> <p>\ud83d\ude80 3. Running the Automation</p> <p>Once the project is set up and properties are configured, follow these steps to run the test cases:</p> <ul> <li>Open the CrmCSEZAutomation.java class. </li> <li>Right-click the file and select: Run As -&gt; Java Application.</li> </ul>"},{"location":"setup/local-setup/#after-execution","title":"After execution:","text":"<ol> <li>A test report will be generated and opened in your browser (if open-report-in-browser=true).</li> <li>The CSV report will be saved locally on your machine.</li> <li>The file path will be displayed in the IDE console after execution.</li> </ol>"},{"location":"utils/utils_documentation/","title":"Utility/Helper Classes Documentation","text":""},{"location":"utils/utils_documentation/#abmutiljava","title":"ABMUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/abm/orchestrations/ABMUtil.java\n</code></pre> Method Parameters Description setDefault_account_config_details Map default_account_config_details No description available setDefault_contact_config_details Map default_contact_config_details No description available setDefault_product_config_details Map default_product_config_details No description available setDefault_deal_config_details Map default_deal_config_details No description available getDefaultTransition String module No description available activateABM None No description available activateAccount String resourceName, String method No description available checkIfResourceExist String resourceName No description available checkABMConfigured boolean activate No description available createSegment Map&gt; segmentCriteria, String basedOn No description available getBody String path No description available populateConfiguration String resourceName No description available loadFields None No description available loadRL None No description available deactivateABM None No description available createOrchestrations String segmentId, String module No description available updateOrchestration String orchestrationId, Map&gt; transition, List fromState No description available getOrchestrationBody String orchestrationId, Map&gt; transition, List fromState No description available createStates String module, String orchestrationId, int noOfStates No description available getStateBody String module, String orchestrationId, int noOfStates No description available getTransitionBody String orchestrationId, List toState, List fromState, JSONArray default_transition_triggers No description available createDraftOrchestration String segmentId, String module No description available deleteOrchestrations String ids No description available getOrchestrationsBody String segmentId, String module No description available"},{"location":"utils/utils_documentation/#integrationutiljava","title":"IntegrationUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/scoringrules/IntegrationUtil.java\n</code></pre> Method Parameters Description enableOrDisableVisitsModule ResourceHandler handler, Method method No description available enableOrDisableVOC ResourceHandler handler, boolean enable No description available enableOrDisableWebinar ResourceHandler handler, boolean enable No description available enableOrDisableCampaigns ResourceHandler handler, boolean enable No description available enableSurveyIntegraion boolean enable, Method method No description available getSurveyBody None No description available getPortal None No description available"},{"location":"utils/utils_documentation/#scoringrulesutiljava","title":"ScoringRulesUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/scoringrules/ScoringRulesUtil.java\n</code></pre> Method Parameters Description createScoringRule JSONObject body, OAuth2 auth No description available getScoringRules String id No description available deleteRuleById String id, OAuth2 auth No description available deleteRule Key key, String id, ResourceHandler resourceHandler No description available deleteAllScoringRules ResourceHandler handler No description available runScoringRules String module, String ruleId No description available runDailyScheduler String module No description available deleteVOCData None No description available getAvailableSources String module No description available linkSources String name No description available getmoduleConfiguration String module No description available deleteModuleConfiguration String module, String id No description available createSignal String nameSpace, String signalName No description available createExtension String name No description available getVersion None No description available setVersion String ver No description available getTouchPointRuleCallsGroupBody String module No description available getTouchPointRulesBody String module, String groupName No description available getRules String groupName No description available getTouchPointRuleCallsDurationBody String module No description available getFieldRulesBody String module No description available getScoringRuleBody String type, String module, String ziaScoreType, OAuth2 auth No description available getManualRuleBody String module No description available getZiaScoringRuleBody String module, String type No description available getCriteriaJSON Map fieldOJ No description available getChildModuleCriteria String module No description available"},{"location":"utils/utils_documentation/#getsystemquerydetailsutiljava","title":"GetSystemQueryDetailsUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/bulk/GetSystemQueryDetailsUtil.java\n</code></pre> Method Parameters Description CreateField String fieldsUrlBuilder, String method, String module, String lookupFieldName, String parentModuleField, String lookupModuleField, String lookupModule No description available recordCase URLBuilder urlBuilder, String lookupModuleField, String parentFieldValue, String parentModuleField, String lookupFieldName, boolean setField, String recordId No description available"},{"location":"utils/utils_documentation/#kiosksutiljava","title":"kiosksUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/kiosks/kiosksUtil.java\n</code></pre> Method Parameters Description createkiosks JSONObject kiosksBody, String kiosksName No description available getkiosksInfoById String id No description available getkiosksGetRecordById String kiosksId, JSONObject kiosksGetRecordBodyJson, String version No description available createkiosksState String kiosksId, JSONObject kiosksStateBodyJson, String version No description available deleteKiosks List kioskIds, String version No description available getStateTransitionId String kiosksId, String stateId, String version No description available createScreenWithCustomFieldState String kiosksId, String kiosksName, String getRecordName, String fieldName, String transitionId, String version No description available getkiosksStateJsonBody String transitionId, String getRecordId, String fieldId, String fieldName, String processId No description available constructGetRecordsJson String moduleNm, String getRecordName, String moduleId, String moduleName, String fieldId, String fieldName No description available"},{"location":"utils/utils_documentation/#recordutiljava","title":"RecordUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/record/RecordUtil.java\n</code></pre> Method Parameters Description createAndGetRecordId String module No description available getRequiredModuleLayoutFields String module, String layoutId No description available getFieldsByType String module, String type No description available getRecordId String module, String operationName, Method method No description available getModulesByType String type No description available executeRecordOperation String module, String operationName, Method method No description available getRecordUrlBuilder String module, String id, String operationName No description available createRecords String module, int count, Key key, Boolean isMandatory No description available checkCase ResourceValidator resourceValidator, int status, LinkedHashMap&lt;Property&lt;?&gt;, Object&gt; dataMap, JSONPath path No description available getRecordById String module, String id, Map params No description available getRelatedRecords String module, String id, String relatedModule, Map params No description available getCustomViewFields String cvid, DataManager dataManager, Map details, Key key No description available getCustomViewCriteriaPath String module, String cvId No description available getTerritoryCriteriaPath String territoryId No description available validateCriteria Case c, LinkedHashMap&lt;Property&lt;?&gt;, Object&gt; response, String dataPath, String paramName No description available getMandateBodyBuilder Operation operation No description available getBodyBuilder Operation operation, boolean mandateOnly No description available getContent Operation operation No description available createCasesForMatchingCriteria String resourceName, URLBuilder urlBuilder, DataManager dataManager, String moduleName, Key key, String dataPath No description available validateInventryModule Case c, Map storeDataMap, JSONPath jsonPath, String keyName No description available verifyItems Map storeDataMap, Case c, String keyName, JSONPath jsonPath No description available updateRecord String module, String recordId, JSONObject reqBody No description available orderProperties String module, List&lt;Property&lt;?&gt;&gt; properties No description available updateOrders String module, List&lt;Property&lt;?&gt;&gt; properties, Map changeProps No description available getModules DataManager dataManager, String cudPath, boolean isDelete, Object...args No description available deleteRecord String module, String recordId, OAuth2 auth, boolean needToDeleteInDataManager No description available isPropertyPresent Map&gt; map, String prop, String module No description available isPropertyPresentInSet Map&gt; map, String prop, String module No description available isPropertyPresentInList List&gt; list, String prop No description available cleanUpRecords None No description available deleteRecordsAtParticularModule String module, Resource recordResource, Operation deleteRecordsOperation No description available getAllRecordIdsAtParticularModule String module, Resource recordResource, Operation getRecordsOperation, Authorization auth No description available"},{"location":"utils/utils_documentation/#multiselectrelatedlistsutiljava","title":"MultiSelectRelatedListsUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/multiselect_relatedlist/MultiSelectRelatedListsUtil.java\n</code></pre> Method Parameters Description deleteMsRelatedLists List ids, String parentModule, String caseName No description available getConnectedRelatedIds List ids, String parentModule, String content No description available createMsRelatedLists int count, String parentModule, String connectedModule, String content No description available createMsRlUsingWrap String module, String connectedModule No description available getRelatedListsCount String parentModule, String type, String content No description available getRelatedListsCountByFieldEnabled String parentModule, String type, String content, boolean fieldEnabled No description available getBody String parentModule, String connectedModule, Integer linkingModuleVisiblity No description available getUniqueString String name, Map bodyMap, String api_name No description available getRelatedRecords String module, String recordId, String type No description available loadRL List modules No description available"},{"location":"utils/utils_documentation/#criteriautiljava","title":"CriteriaUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/util/CriteriaUtil.java\n</code></pre> Method Parameters Description isTypeNeeded None No description available setUserLookupType UserLookupType userLookupType No description available setFieldsFilter Predicate&gt; fieldsFilter No description available changeDataTypeAccordingToSupportedComparators List&gt; fields, String module No description available getDataTimeValues None No description available getpicklistValues Map field No description available getPicklistPropName None No description available getRegex String type No description available populateMaps None No description available getDataManager None No description available"},{"location":"utils/utils_documentation/#sortutiljava","title":"SortUtil.java","text":"<pre><code>path : src/main/java/com/zoho/crm/spec/automation/custom/util/SortUtil.java\n</code></pre> Method Parameters Description validateSort boolean sortOrder, JSONPath path, LinkedList"},{"location":"utils/utils_documentation/#resetconfigurationutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#fieldsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#moduleutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#portalsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#projectsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#approvalprocesscreationutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#surveyutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#wizardssectionsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#emailtemplatesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#infovalidatorutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#workflowrulesrecordvalidationsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#workflowrulesdependentrequestutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#workflowrulesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#shifthoursutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#usersutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#sandboxusersutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#canvasviewutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#filesizefieldincreaseutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#fieldscommonutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#fieldsmxncaseutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#fieldslimitexceedcaseutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#dynamicfieldsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#recordssearchutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#timelinescommonutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#workflowruleutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#compositeutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#userstransferutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#getrelatedrecordscountutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#cadencesbodyutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#cadencesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#portalsutiljava_1","title":"Utilities","text":""},{"location":"utils/utils_documentation/#bulkreadutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#vocdatautiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#vocforecastsutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#sandboxutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#graphqlutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#filesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#profilesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#webhooksutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#bulkwriteutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#pagesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#ziaorgenrichmentutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#sharingrulesutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#emailsignatureutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#zdkrequestutiljava","title":"Utilities","text":""},{"location":"utils/utils_documentation/#zdkziputiljava","title":"Utilities","text":""}]}